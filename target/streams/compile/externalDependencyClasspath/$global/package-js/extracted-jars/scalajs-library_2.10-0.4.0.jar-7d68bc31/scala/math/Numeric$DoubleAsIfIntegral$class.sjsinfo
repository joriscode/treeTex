{
  "name": "scala.math.Numeric$DoubleAsIfIntegral$class",
  "ancestorCount": 0,
  "isStaticModule": false,
  "isInterface": false,
  "isImplClass": true,
  "isRawJSType": false,
  "encodedName": "scala_math_Numeric$DoubleAsIfIntegral$class",
  "superClass": "",
  "ancestors": ["scala_math_Numeric$DoubleAsIfIntegral$class"],
  "isExported": false,
  "methods": {
    "scala_math_Numeric$DoubleAsIfIntegral$class__quot__Lscala_math_Numeric$DoubleAsIfIntegral__D__D__D": {
      "calledMethods": {
        "scala_math_BigDecimal": ["doubleValue__D", "$$div__Lscala_math_BigDecimal__Lscala_math_BigDecimal"],
        "scala_math_BigDecimal$": ["apply__D__Lscala_math_BigDecimal"]
      },
      "accessedModules": ["scala_math_BigDecimal"]
    },
    "scala_math_Numeric$DoubleAsIfIntegral$class__rem__Lscala_math_Numeric$DoubleAsIfIntegral__D__D__D": {
      "calledMethods": {
        "scala_math_BigDecimal": ["doubleValue__D", "remainder__Lscala_math_BigDecimal__Lscala_math_BigDecimal"],
        "scala_math_BigDecimal$": ["apply__D__Lscala_math_BigDecimal"]
      },
      "accessedModules": ["scala_math_BigDecimal"]
    },
    "scala_math_Numeric$DoubleAsIfIntegral$class__$init$__Lscala_math_Numeric$DoubleAsIfIntegral__V": {}
  }
}
